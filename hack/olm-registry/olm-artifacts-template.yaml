apiVersion: v1
kind: Template
parameters:
- name: CHANNEL
  required: true
- name: IMAGE_TAG
  required: true
- name: IMAGE_DIGEST
  required: true
- name: NAMESPACE
  value: openshift-osde2e-example-test-harness
- name: REGISTRY_IMG
  required: true
- name: REPO_NAME
  value: osde2e-example-test-harness
  required: true
metadata:
  name: selectorsyncset-template
objects:
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: osde2e-example-test-harness
  spec:
    clusterDeploymentSelector:
      matchLabels:
        osde2e: 'true'
    resourceApplyMode: Sync
    resources:
    - apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          openshift.io/cluster-monitoring: 'true'
        name: ${NAMESPACE}
    - apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: ${REPO_NAME}
        namespace: ${NAMESPACE}
        annotations:
          olm.operatorframework.io/exclude-global-namespace-resolution: 'true'
      spec:
        targetNamespaces:
        - e2e-testing
    - apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        labels:
          opsrc-datastore: 'true'
          opsrc-provider: redhat
        name: ${REPO_NAME}-registry
        namespace: ${NAMESPACE}
      spec:
        displayName: ${REPO_NAME}
        icon:
          base64data: ''
          mediatype: ''
        image: ${REGISTRY_IMG}@${IMAGE_DIGEST}
        publisher: Red Hat
        sourceType: grpc
        grpcPodConfig:
          securityContextConfig: restricted
          nodeSelector:
            node-role.kubernetes.io: infra
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/infra
            operator: Exists
    - apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: ${REPO_NAME}
        namespace: ${NAMESPACE}
      spec:
        channel: ${CHANNEL}
        name: ${REPO_NAME}
        source: ${REPO_NAME}-registry
        sourceNamespace: ${NAMESPACE}
