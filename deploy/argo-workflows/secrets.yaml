# OSDE2E Workflow Secrets Configuration
#
#  SECURITY NOTICE:
# This file is configured for LOCAL DEVELOPMENT with placeholder values.
# Replace placeholder values (YOUR_*) with actual credentials for your environment.
#
#   IMPORTANT:
# - Never commit real credentials to version control
# - Use environment-specific values for different deployments
# - For production, use external secret management (Vault, AWS Secrets Manager, etc.)

---
apiVersion: v1
kind: Secret
metadata:
  name: osde2e-credentials
  namespace: argo
  labels:
    app: osde2e-workflow
    component: credentials
type: Opaque
stringData:
  # OCM Credentials (get from vault: sdcicd_aws/)
  ocm-client-id: "your-ocm-client-id"                   # Copy from vault: ocm/ocm-client-id
  ocm-client-secret: "your-ocm-client-secret"           # Copy from vault: ocm/ocm-client-secret

  # AWS Credentials (get from vault: sdcicd_aws/)
  aws-access-key-id: "your-aws-access-key-id"           # From vault: sdcicd_aws/access-key-id
  aws-secret-access-key: "your-aws-secret-access-key"   # From vault: sdcicd_aws/secret-access-key
  aws-account-id: "your-aws-account-id"                 # From vault: sdcicd_aws/aws-account-id
  cloud-provider-region: "us-east-1"                    # AWS region for your cluster

  # Slack Notification (optional)
  slack-webhook-url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

---
# S3 Artifact Repository Credentials (separate for better security isolation)
apiVersion: v1
kind: Secret
metadata:
  name: s3-artifact-credentials
  namespace: argo
  labels:
    app: osde2e-workflow
    component: s3-credentials
type: Opaque
stringData:
  # AWS S3 Access Credentials for Artifact Storage
  # Option 1: Use same credentials as above (simpler setup)
  # Option 2: Create dedicated S3-only IAM user (better security)
  accesskey: # AWS Access Key ID for S3 artifact storage
  secretkey: # AWS Secret Access Key for S3 artifact storage